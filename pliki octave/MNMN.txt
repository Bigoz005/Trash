function y=lagrange(x,pointx,pointy)
n=size(pointx,2);
L=ones(n,size(x,2));
if (size(pointx,2)~=size(pointy,2))
   fprintf(1,'\nERROR!\nPOINTX and POINTY must have the same number of elements\n');
   y=NaN;
else
   for i=1:n
      for j=1:n
         if (i~=j)
            L(i,:)=L(i,:).*(x-pointx(j))/(pointx(i)-pointx(j));
         end
      end
   end
   y=0;
   for i=1:n
      y=y+pointy(i)*L(i,:);
   end
end





function[n]=trojkat(x,y)

X=x';
Y=y';

C0=Y(1)
C1=(Y(2)-C0)/(X(2)-X(1))
C2=(Y(3)-C0 - C1*(X(3) - X(1)))/[(X(3)-X(1))*(X(3)-X(2))]

n=[zeros(1,2),C0] + [zeros(1,1),conv(C1,[1,(-1)*X(1)])] + conv(C2,conv([1,(-1)*X(1)],[1,(-1)*X(2)])) ;

end





function [w] = vandermonde(x,y)

w=[];

w=(repmat(x,1,length(x)).^repmat(length(x)-1:-1:0,length(x),1))/y

polyval(w,x)

end